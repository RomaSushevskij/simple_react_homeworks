{"version":3,"sources":["p2-homeworks/h2/Affairs.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","avatar","name","message","time","className","style","messageWrapper","src","messageBlock","messageData","HW1","Affair","props","priorityStyle","affair","priority","removingSymbol","xmlns","width","height","viewBox","d","affairBlock","affairName","affairPriority","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","setActiveClass","filter","FilterTypeButtonAll","active","FilterTypeButtonLow","FilterTypeButtonMiddle","FilterTypeButtonHigh","FilterTypeButton","buttonBlock","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filteredAffairs","filterAffairs","deleteAffair","Greeting","setNameCallback","onKeyPressSetName","addUser","error","totalUsers","inputError","s","usersInput","addSymbol","version","preserveAspectRatio","transform","inputWrapper","inputAndButton","value","onBlur","onChange","onKeyPress","addUserButton","disabled","borderTotalUsers","errorBlockMessage","GreetingContainer","users","addUserCallback","setName","setError","alert","length","e","inputValue","currentTarget","trim","key","HW3","setUsers","v1","SuperInputText","type","onChangeText","onEnter","spanClassName","restProps","title","finalSpanClassName","finalInputClassName","errorInput","superInput","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","label","checked","fakeFlag","HW4","text","setText","showAlert","setChecked","column","green","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.355977ba.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"affairBlock\":\"Affairs_affairBlock__2xWDH\",\"affairName\":\"Affairs_affairName___CIX-\",\"affairPriority\":\"Affairs_affairPriority__11l3B\",\"low\":\"Affairs_low__2qj5E\",\"high\":\"Affairs_high__2VeWL\",\"middle\":\"Affairs_middle__1DTpf\",\"FilterTypeButton\":\"Affairs_FilterTypeButton__1FA_n\",\"buttonBlock\":\"Affairs_buttonBlock__4Mr7g\",\"FilterTypeButtonAll\":\"Affairs_FilterTypeButtonAll__3ftME\",\"FilterTypeButtonLow\":\"Affairs_FilterTypeButtonLow__3QYMC\",\"FilterTypeButtonMiddle\":\"Affairs_FilterTypeButtonMiddle__3ba9K\",\"FilterTypeButtonHigh\":\"Affairs_FilterTypeButtonHigh__2MYCX\",\"active\":\"Affairs_active__2AZMg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputWrapper\":\"Greeting_inputWrapper__3Odir\",\"inputAndButton\":\"Greeting_inputAndButton__D5Jmh\",\"usersInput\":\"Greeting_usersInput__3A5dW\",\"error\":\"Greeting_error__qhL8I\",\"errorBlockMessage\":\"Greeting_errorBlockMessage__KDXsF\",\"addUserButton\":\"Greeting_addUserButton__3Ur08\",\"borderTotalUsers\":\"Greeting_borderTotalUsers__2wc6g\",\"totalUsers\":\"Greeting_totalUsers__r2PBG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageWrapper\":\"Message_messageWrapper__3mERz\",\"messageBlock\":\"Message_messageBlock__1r6Fm\",\"name\":\"Message_name__3_10D\",\"message\":\"Message_message__1xvgy\",\"time\":\"Message_time__olr25\",\"avatar\":\"Message_avatar__3WCxQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputWrapper\":\"SuperInputText_inputWrapper__35cp6\",\"superInput\":\"SuperInputText_superInput__gSi80\",\"errorInput\":\"SuperInputText_errorInput__jZsqE\",\"error\":\"SuperInputText_error__3-Pxy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__2Ilqe\",\"spanClassName\":\"SuperCheckbox_spanClassName__3po9_\",\"label\":\"SuperCheckbox_label__28YY-\",\"fakeFlag\":\"SuperCheckbox_fakeFlag__-3EAN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"green\":\"HW4_green__3QNvu\",\"column\":\"HW4_column__h2TDi\",\"testSpanError\":\"HW4_testSpanError__3vEEc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__WJLRF\",\"red\":\"SuperButton_red__3SfXn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2Uo9P\"};","import React from 'react'\r\nimport style from './Message.module.css'\r\n\r\ntype MessagePropsType = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n}\r\n\r\nfunction Message({avatar, name, message, time, ...props} : MessagePropsType) {\r\n    return (\r\n        <div className={style.messageWrapper}>\r\n            <div className={style.avatar}>\r\n                <img src={avatar}/>\r\n            </div>\r\n            <div className={style.messageBlock}>\r\n                <div className={style.name}>\r\n                    {name}\r\n                </div>\r\n                <div className={style.message}>\r\n                    {message}\r\n                </div>\r\n                <div className={style.time}>\r\n                    {time}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport Message from \"./Message\";\r\n\r\nconst messageData = {\r\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n    name: 'Some Name',\r\n    message: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Eaque, mollitia repellendus. Amet, ex incidunt itaque labore necessitatibus nobis saepe vero.',\r\n    time: '22:00',\r\n}\r\n\r\nfunction HW1() {\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n\r\n            {/*should work (должно работать)*/}\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW1\r\n","import React from 'react'\r\nimport {AffairType} from \"./HW2\";\r\nimport style from './Affairs.module.css'\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: AffairType // need to fix any\r\n    deleteAffairCallback: (_id: number) => void // need to fix any\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {\r\n        props.deleteAffairCallback(props.affair._id)\r\n    };// need to fix\r\n\r\n    const priorityStyle = style[props.affair.priority];\r\n    const removingSymbol = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"3 -2 24 24\">\r\n        <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"/>\r\n    </svg>\r\n    return (\r\n        <div>\r\n            <div className={style.affairBlock}>\r\n                <div className={style.affairName}>\r\n                    {props.affair.name}\r\n                </div>\r\n                <div className={`${style.affairPriority} ${priorityStyle}`}>\r\n                    {props.affair.priority}\r\n                </div>\r\n                <button onClick={deleteCallback}>{removingSymbol}</button>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n","import React from 'react'\r\nimport Affair from './Affair'\r\nimport {AffairType, FilterType} from './HW2'\r\nimport style from './Affairs.module.css'\r\n\r\ntype AffairsPropsType = { // need to fix any\r\n    data: Array<AffairType>\r\n    setFilter: (filter: FilterType) => void\r\n    deleteAffairCallback: (_id: number) => void\r\n    filter: FilterType\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ));\r\n\r\n    const setActiveClass = (filter: FilterType) => {\r\n        if (props.filter === filter && filter === 'all') {\r\n            return `${style.FilterTypeButtonAll} ${style.active}`\r\n        } else if (props.filter === filter && filter === 'low') {\r\n            return `${style.FilterTypeButtonLow} ${style.active}`\r\n        } else if (props.filter === filter && filter === 'middle') {\r\n            return `${style.FilterTypeButtonMiddle} ${style.active}`\r\n        } else if (props.filter === filter && filter === 'high') {\r\n            return `${style.FilterTypeButtonHigh} ${style.active}`\r\n        } else {\r\n            return style.FilterTypeButton\r\n        }\r\n    }\r\n\r\n    const setAll = () => props.setFilter('all');// need to fix\r\n    const setHigh = () => props.setFilter('high');\r\n    const setMiddle = () => props.setFilter('middle');\r\n    const setLow = () => props.setFilter('low');\r\n\r\n    return (\r\n        <div>\r\n\r\n            {mappedAffairs}\r\n\r\n            <div className={style.buttonBlock}>\r\n                <button className={setActiveClass('all')} onClick={setAll}>All</button>\r\n                <button className={setActiveClass('high')} onClick={setHigh}>High</button>\r\n                <button className={setActiveClass('middle')} onClick={setMiddle}>Middle</button>\r\n                <button className={setActiveClass('low')} onClick={setLow}>Low</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\n\r\n// types\r\nexport type AffairPriorityType = 'high' | 'low' | 'middle';  // need to fix any\r\nexport type AffairType = {\r\n    _id: number\r\n    name: string\r\n    priority: AffairPriorityType\r\n} // need to fix any\r\nexport type FilterType = 'all' | AffairPriorityType\r\n\r\n// constants\r\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'anime', priority: 'low'},\r\n    {_id: 3, name: 'games', priority: 'low'},\r\n    {_id: 4, name: 'work', priority: 'high'},\r\n    {_id: 5, name: 'Lorem ipsum dolor sit amet, consectetur.', priority: 'middle'},\r\n];\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\r\n    if (filter === 'all') {\r\n        return affairs\r\n    } else {\r\n        return affairs.filter(affair => affair.priority === filter)\r\n    }\r\n};\r\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any\r\n    return affairs.filter(affair => affair._id !== _id)// need to fix\r\n};\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs); // need to fix any\r\n    const [filter, setFilter] = useState<FilterType>('all');\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter);\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id));// need to fix any\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n                filter={filter}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React, {ChangeEvent, KeyboardEvent} from 'react'\r\nimport s from './Greeting.module.css'\r\n\r\ntype GreetingPropsType = {\r\n    name: string // need to fix any\r\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\r\n    addUser: () => void // need to fix any\r\n    error: string // need to fix any\r\n    totalUsers: number // need to fix any\r\n    onKeyPressSetName: (e: KeyboardEvent<HTMLInputElement>) => void\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, onKeyPressSetName, addUser, error, totalUsers} // деструктуризация пропсов\r\n) => {\r\n    const inputError = `${s.usersInput} ${s.error}`; // need to fix with (?:)\r\n    const addSymbol = <svg version=\"1.0\" xmlns=\"http://www.w3.org/2000/svg\"\r\n                           viewBox=\"0 0 1267.000000 1280.000000\"\r\n                           preserveAspectRatio=\"xMidYMid meet\">\r\n        <g transform=\"translate(0.000000,1280.000000) scale(0.100000,-0.100000)\"\r\n        >\r\n            <path d=\"M6150 12794 c-195 -19 -398 -76 -550 -155 -338 -176 -592 -520 -691\r\n-938 -54 -226 -52 -157 -56 -2058 l-4 -1763 -1712 0 c-1854 0 -1839 0 -2071\r\n-54 -403 -96 -739 -346 -906 -676 -114 -227 -170 -514 -157 -817 17 -398 156\r\n-724 421 -989 200 -199 415 -319 695 -385 204 -49 183 -49 2013 -49 l1717 0 4\r\n-1762 c4 -1902 2 -1833 56 -2059 100 -421 345 -751 688 -927 124 -64 249 -105\r\n402 -134 168 -32 494 -32 663 0 300 56 514 167 713 366 234 236 365 511 421\r\n886 16 105 18 270 21 1873 l4 1757 1717 0 c1888 0 1849 -1 2091 61 400 103\r\n715 350 886 698 151 305 196 741 115 1126 -83 402 -328 720 -697 907 -120 62\r\n-190 87 -332 123 -218 55 -211 55 -2068 55 l-1712 0 -4 1763 c-3 1564 -5 1774\r\n-20 1869 -59 391 -203 678 -463 928 -184 177 -393 280 -669 331 -108 20 -406\r\n33 -515 23z\"/>\r\n        </g>\r\n    </svg>\r\n    return (\r\n        <div className={s.inputWrapper}>\r\n\r\n            <div className={s.inputAndButton}>\r\n                <input value={name} onBlur={setNameCallback} onChange={setNameCallback} onKeyPress={onKeyPressSetName}\r\n                       className={error ? inputError : s.usersInput}/>\r\n                <button className={s.addUserButton} onClick={addUser}\r\n                        disabled={!!(error && !name)}>{addSymbol}</button>\r\n                <div className={s.borderTotalUsers}>\r\n                    <div className={s.totalUsers}>\r\n                        <h3>{totalUsers}</h3>\r\n                        <p>users</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {error && <div className={s.errorBlockMessage}>{error}</div>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Greeting\r\n","import React, {ChangeEvent, KeyboardEvent, useState} from 'react'\r\nimport Greeting from './Greeting'\r\nimport {UserType} from \"./HW3\";\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: UserType[] // need to fix any\r\n    addUserCallback: (name: string) => void // need to fix any\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>(''); // need to fix any\r\n    const [error, setError] = useState<string>(''); // need to fix any\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        const inputValue = e.currentTarget.value.trim();\r\n        if (inputValue) {\r\n            setName(inputValue)\r\n            error && setError('');\r\n        } else {\r\n            name && setName('')\r\n            setError('Name required')\r\n        }\r\n        // need to fix any\r\n        // need to fix\r\n    };\r\n\r\n    const addUser = () => {\r\n        addUserCallback(name);\r\n        setName('')\r\n        alert(`Hello ${name}!`)\r\n        // need to fix\r\n    };\r\n    const onKeyPressSetName = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.key === 'Enter' && name) {\r\n            addUser()\r\n        }\r\n    };\r\n\r\n    const totalUsers = users.length;// need to fix\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n            onKeyPressSetName={onKeyPressSetName}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, {useState} from 'react'\r\nimport GreetingContainer from './GreetingContainer'\r\nimport {v1} from \"uuid\";\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string // need to fix any\r\n    name: string // need to fix any\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<UserType[]>([]); // need to fix any\r\n\r\n    const addUserCallback = (name: string) => { // need to fix any\r\n        setUsers([{_id: v1(), name: name}, ...users]) // need to fix\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName, name, title,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    };\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    };\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`;\r\n    const finalInputClassName = `${error ? `${s.errorInput} ${s.superInput}` : s.superInput} ${className}`;// need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <div className={s.inputWrapper}>\r\n            <input name={name}\r\n                   type={'text'}\r\n                   onChange={onChangeCallback}\r\n                   onKeyPress={onKeyPressCallback}\r\n                   className={finalInputClassName}\r\n\r\n\r\n                   {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n\r\n\r\n            {error && <div className={finalSpanClassName}>{error}</div>}\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`;\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e);\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked);\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n    };\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label className={s.label}>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            <span className={s.fakeFlag}></span>\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'Field is required';\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    //spanClassName={s.testSpanError}\r\n                />\r\n\r\n                <SuperInputText\r\n                    className={s.green} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperButton>\r\n                    default\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperButton disabled>\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW1 from '../../../p2-homeworks/h1/HW1'\r\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\r\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\r\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            {/*<HW5/>*/}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}