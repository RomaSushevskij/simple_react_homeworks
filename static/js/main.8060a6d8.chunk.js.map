{"version":3,"sources":["p2-homeworks/h2/Affairs.module.css","p2-homeworks/h1/Message.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","avatar","name","message","time","className","style","messageWrapper","src","messageBlock","messageData","HW1","Affair","props","priorityStyle","affair","priority","affairBlock","affairName","affairPriority","onClick","deleteAffairCallback","_id","xmlns","width","height","viewBox","d","Affairs","mappedAffairs","data","map","a","setActiveClass","filter","FilterTypeButtonAll","active","FilterTypeButtonLow","FilterTypeButtonMiddle","FilterTypeButtonHigh","FilterTypeButton","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filteredAffairs","filterAffairs","deleteAffair","App","s","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.8060a6d8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"affairBlock\":\"Affairs_affairBlock__2xWDH\",\"affairName\":\"Affairs_affairName___CIX-\",\"affairPriority\":\"Affairs_affairPriority__11l3B\",\"low\":\"Affairs_low__2qj5E\",\"high\":\"Affairs_high__2VeWL\",\"middle\":\"Affairs_middle__1DTpf\",\"FilterTypeButton\":\"Affairs_FilterTypeButton__1FA_n\",\"FilterTypeButtonAll\":\"Affairs_FilterTypeButtonAll__3ftME\",\"FilterTypeButtonLow\":\"Affairs_FilterTypeButtonLow__3QYMC\",\"FilterTypeButtonMiddle\":\"Affairs_FilterTypeButtonMiddle__3ba9K\",\"FilterTypeButtonHigh\":\"Affairs_FilterTypeButtonHigh__2MYCX\",\"active\":\"Affairs_active__2AZMg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageWrapper\":\"Message_messageWrapper__3mERz\",\"messageBlock\":\"Message_messageBlock__1r6Fm\",\"name\":\"Message_name__3_10D\",\"message\":\"Message_message__1xvgy\",\"time\":\"Message_time__olr25\",\"avatar\":\"Message_avatar__3WCxQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2Uo9P\"};","import React from 'react'\r\nimport style from './Message.module.css'\r\n\r\ntype MessagePropsType = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n}\r\n\r\nfunction Message({avatar, name, message, time, ...props} : MessagePropsType) {\r\n    return (\r\n        <div className={style.messageWrapper}>\r\n            <div className={style.avatar}>\r\n                <img src={avatar}/>\r\n            </div>\r\n            <div className={style.messageBlock}>\r\n                <div className={style.name}>\r\n                    {name}\r\n                </div>\r\n                <div className={style.message}>\r\n                    {message}\r\n                </div>\r\n                <div className={style.time}>\r\n                    {time}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport Message from \"./Message\";\r\n\r\nconst messageData = {\r\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n    name: 'Some Name',\r\n    message: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Eaque, mollitia repellendus. Amet, ex incidunt itaque labore necessitatibus nobis saepe vero.',\r\n    time: '22:00',\r\n}\r\n\r\nfunction HW1() {\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n\r\n            {/*should work (должно работать)*/}\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW1\r\n","import React from 'react'\r\nimport {AffairType} from \"./HW2\";\r\nimport style from './Affairs.module.css'\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: AffairType // need to fix any\r\n    deleteAffairCallback: (_id: number) => void // need to fix any\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {props.deleteAffairCallback(props.affair._id)};// need to fix\r\n\r\n    const priorityStyle = style[props.affair.priority];\r\n\r\n    return (\r\n        <div>\r\n            <div className={style.affairBlock}>\r\n                <div className={style.affairName}>\r\n                    {props.affair.name}\r\n                </div>\r\n                <div className={`${style.affairPriority} ${priorityStyle}`}>\r\n                    {props.affair.priority}\r\n                </div>\r\n                <button onClick={deleteCallback}>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"3 -2 24 24\">\r\n                        <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"/>\r\n                    </svg>\r\n                </button>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n","import React from 'react'\r\nimport Affair from './Affair'\r\nimport {AffairType, FilterType} from './HW2'\r\nimport style from './Affairs.module.css'\r\n\r\ntype AffairsPropsType = { // need to fix any\r\n    data: Array<AffairType>\r\n    setFilter: (filter: FilterType) => void\r\n    deleteAffairCallback: (_id: number) => void\r\n    filter: FilterType\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ));\r\n\r\n    const setActiveClass = (filter: FilterType) => {\r\n        if (props.filter === filter && filter === 'all') {\r\n            return `${style.FilterTypeButtonAll} ${style.active}`\r\n        } else if (props.filter === filter && filter === 'low') {\r\n            return `${style.FilterTypeButtonLow} ${style.active}`\r\n        } else if (props.filter === filter && filter === 'middle') {\r\n            return `${style.FilterTypeButtonMiddle} ${style.active}`\r\n        } else if (props.filter === filter && filter === 'high') {\r\n            return `${style.FilterTypeButtonHigh} ${style.active}`\r\n        } else {\r\n            return style.FilterTypeButton\r\n        }\r\n    }\r\n\r\n    const setAll = () => props.setFilter('all');// need to fix\r\n    const setHigh = () => props.setFilter('high');\r\n    const setMiddle = () => props.setFilter('middle');\r\n    const setLow = () => props.setFilter('low');\r\n\r\n    return (\r\n        <div>\r\n\r\n            {mappedAffairs}\r\n\r\n            <button className={setActiveClass('all')} onClick={setAll}>All</button>\r\n            <button className={setActiveClass('high')} onClick={setHigh}>High</button>\r\n            <button className={setActiveClass('middle')} onClick={setMiddle}>Middle</button>\r\n            <button className={setActiveClass('low')} onClick={setLow}>Low</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\n\r\n// types\r\nexport type AffairPriorityType = 'high' | 'low' | 'middle';  // need to fix any\r\nexport type AffairType = {\r\n    _id: number\r\n    name: string\r\n    priority: AffairPriorityType\r\n} // need to fix any\r\nexport type FilterType = 'all' | AffairPriorityType\r\n\r\n// constants\r\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'anime', priority: 'low'},\r\n    {_id: 3, name: 'games', priority: 'low'},\r\n    {_id: 4, name: 'work', priority: 'high'},\r\n    {_id: 5, name: 'Lorem ipsum dolor sit amet, consectetur.', priority: 'middle'},\r\n];\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\r\n    if (filter === 'all') {\r\n        return affairs\r\n    } else {\r\n        return affairs.filter(affair => affair.priority === filter)\r\n    }\r\n};\r\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any\r\n    return affairs.filter(affair => affair._id !== _id)// need to fix\r\n};\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs); // need to fix any\r\n    const [filter, setFilter] = useState<FilterType>('all');\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter);\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id));// need to fix any\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n                filter={filter}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n            <p>Lorem ipsum dolor sit amet, consectetur.</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW1 from '../../../p2-homeworks/h1/HW1'\r\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            <HW1/>\r\n            <HW2/>\r\n            {/*<HW3/>*/}\r\n            {/*<HW4/>*/}\r\n            {/*<HW5/>*/}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}